#!/bin/bash
#
#  Usage:
#  ./roll-debian [ <arch.directory> ]
#
#  This script creates a .deb package from the current
#  contents ApplePi project.  
#
#  The new .deb will contain:
#  - the executable, from <project dir>/bin/applepi
#  - and the future contents of /usr/share/applepi, from:
#    <project dir>/help
#


usage() {
    echo 
    echo \*\*\*  Usage: $0 \[ \<directory\> \]
    echo 
    exit 1
}


if [ $(id -u) != 0 ]; then
    echo
    echo \*\*\* $0 must be run by sudo.
    echo
    exit 1
fi


# --- Check architecture

if [ $# = 0 ]; then
    ARCH=$(uname -m)
    if   [ $ARCH = armv7l ]; then
        DIR=armhf
    elif [ $ARCH = aarch64 ]; then
        DIR=arm64
    elif [ $ARCH = x86_64 ]; then
        DIR=amd64
    else
        echo
        echo \*\*\* This machine\'s architecture \($ARCH\) is not recognized.
        echo \*\*\* You will have to create a new package directory for it,
        echo \*\*\* and specify that directory name on the command line:
        echo \*\*\* ./roll-debian  directoryname
        echo
        exit 1
    fi
else
    if [ $# = 1 ]; then
        DIR=$1
    else
        usage
    fi
fi

if [ ! -d $DIR ]; then
    echo ; echo \*\*\*  No such directory: $DIR; echo
    exit 1
fi


# --- Check for files & dirs

EXEC=../../bin/applepi
HELP=../../help
CONTROL=$DIR/DEBIAN/control
SHARE=$DIR/usr/share/applepi
BIN=$DIR/usr/bin

if [ ! -f $CONTROL ]; then
    echo; echo \*\*\*  Can\'t find $CONTROL; echo
    exit 1
fi

if [ ! -f $EXEC ]; then
    echo; echo \*\*\*  Can\'t find $EXEC;  echo
    exit 1
fi

if [ ! -d $HELP ]; then
    echo; echo \*\*\*  Can\'t find directory $HELP; echo
    exit 1
fi


# --- Copy files & make them owned by root

mkdir -p $SHARE
mkdir -p $BIN

rm -f $SHARE/*
rm -f $BIN/*

cp $HELP/*  $SHARE
cp $EXEC    $BIN

chown 0.0 $SHARE
chown 0.0 $SHARE/*
chown 0.0 $BIN/*


# --- Get the current version number from the source code
# --- and put it in the debian 'control' file 

VERSION=$(cut -d'"' -f2 ../../src/version.h)
sed -i -e"s/Version:.*/Version: $VERSION/g"  $DIR/DEBIAN/control


# --- Create the .deb file with the current version number

PKGNAME=applepi-"$VERSION"_$DIR.deb
/usr/bin/dpkg-deb --build $DIR  $PKGNAME


# --- Clean up.

chown -R $SUDO_UID:$SUDO_GID  $DIR $PKGNAME    # Restore ownership of files
rm -rf $DIR/usr                                # Get rid of temporary files

exit 0

